MVC程序结构是在19世纪70年代作为Smalltalk语言的一部分被引入的。在Smalltalk的发展初期，MVC在每一种桌面开发环境中都变得非常流行，这些环境中的用户界面都相当复杂。无论是C++、Java还是Objective-C，它们都带有一些MVC的意味。但是，直到现在，MVC还依然与web开发毫不相干。

MVC背后的核心理念是：你应该把管理数据的代码（Model）、应用逻辑代码（Controller），以及向用户展示数据的代码（View）清晰地分离开。

视图会从模型中获取数据，然后展示给用户。当用户通过鼠标点击或者键盘输入与应用进行交互的时候，控制器将会做出响应并修改模型中的数据。最后，模型会通知视图数据已经发生了变更，这样视图就可以刷新其中显示的内容。

在Angular应用中，视图就是Document Object Model（DOM，文档对象模型），控制器就是JavaScript类，而模型数据则被存储在对象的属性中。

MVC之所以非常灵活，原因有很多。首先，对于什么东西应该放在哪里，MVC给了你一个思想上的模型，所以你不需要每次都来构建这个模型。如果和你一起做项目的人知道你正在使用MVC来组织代码，那么他们立刻就能明白你写的东西是什么意思。最重要的一点是，使用MVC模型会让你的应用更加易于扩展、维护和测试。
