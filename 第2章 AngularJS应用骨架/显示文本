使用ng-bind指令，你可以在UI中的任何地方显示并刷新文本。它还有两种等价形式。第一种是使用花括号的形式，我们已经见过了：
<p>{{greeting}}</p>

还有一种方式就是使用基于属性的指令，叫做ng-bind：
<p ng-bind="greeting"></p>

对于输出的内容来说两种形式是等价的。如果模型变量greeting被设置为“Hi there”，Angular将会生成以下HTML：
<p>Hi there</p>

然后浏览器就会显示“Hi there”。

那么，你为什么要使用一种方式替代另一种呢？我们创建双花括号插值语法的目的是为了阅读起来更加自然，并且需要输入的内容更少。虽然两种形式的输出内容相同，但是使用双花括号语法的时候，在Angular使用数据替换这些花括号之前，第一个加载的页面，也就是应用中的index.html ，其未被渲染好的模板可能会被用户看到。而使用第二种方法的视图就不会遇到这个问题。

造成这种现象的原因是，浏览器需要首先加载HTML页面，渲染它，然后Angular才有机会把它解释成你期望看到的内容。

好消息是，在大多数模板中你依然可以使用{{  }}。但是，对于index. HTML页面中的数据绑定操作，建议使用ng-bind。这样一来，在数据加载完成之前你的用户就不会看到任何内容。
